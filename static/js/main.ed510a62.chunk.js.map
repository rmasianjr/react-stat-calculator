{"version":3,"sources":["components/Stats/Stats.js","components/StatusInfo/StatusInfo.js","components/Header/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["Stats","_this$props","this","props","stats","onIncrementStat","onDecrementStat","Object","keys","map","statItem","react_default","a","createElement","key","className","onClick","class","toUpperCase","renderStats","Component","StatusInfo","_props$stats","str","agi","int","vit","parseFloat","toFixed","Header","level","onLevelUp","spCount","onReset","react","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleIncrementStat","bind","assertThisInitialized","handleDecrementStat","handleLevelUp","handleReset","setState","prevState","stat","statsCopy","assign","_this$state","components_Header_Header","components_Stats_Stats","components_StatusInfo_StatusInfo","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed510a62.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Stats.css';\r\n\r\nclass Stats extends Component {\r\n  renderStats() {\r\n    const { stats, onIncrementStat, onDecrementStat } = this.props;\r\n    const statsArray = Object.keys(stats);\r\n    return statsArray.map(statItem => {\r\n      return (\r\n        <li key={statItem} className=\"stat-item\">\r\n          <div className=\"stat-controls\">\r\n            <span>\r\n              <i\r\n                onClick={() => onIncrementStat(statItem)}\r\n                class=\"icon ion-ios-add-circle-outline\"\r\n              />\r\n            </span>\r\n            <span>\r\n              <i\r\n                onClick={() => onDecrementStat(statItem)}\r\n                class=\"icon ion-ios-remove-circle-outline\"\r\n              />\r\n            </span>\r\n          </div>\r\n          <p className=\"stat-text\">\r\n            {statItem.toUpperCase()} : <span>{stats[statItem]}</span>\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"stats\">\r\n        <h2 className=\"stats-title\">Stats</h2>\r\n        <ul>{this.renderStats()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport './StatusInfo.css';\r\n\r\nconst StatusInfo = props => {\r\n  const { str, agi, int, vit } = props.stats;\r\n  return (\r\n    <div className=\"status-info\">\r\n      <h2 class=\"status-info-title\">Status Information</h2>\r\n      <p>\r\n        HP: <span className=\"status-info-value\">{vit * 50 + 1000}</span>{' '}\r\n      </p>\r\n      <p>\r\n        MP: <span className=\"status-info-value\">{int * 20 + 700}</span>{' '}\r\n      </p>\r\n      <p>\r\n        Physical Damage:{' '}\r\n        <span className=\"status-info-value\">{str * 5 + 30}</span>{' '}\r\n      </p>\r\n      <p>\r\n        Defense: <span className=\"status-info-value\">{vit * 7 + 50}</span>{' '}\r\n      </p>\r\n      <p>\r\n        Magic Damage: <span className=\"status-info-value\">{int * 7 + 20}</span>{' '}\r\n      </p>\r\n      <p>\r\n        Magic Defense: <span className=\"status-info-value\">{int * 4 + 40}</span>{' '}\r\n      </p>\r\n      <p>\r\n        Critical:{' '}\r\n        <span className=\"status-info-value\">\r\n          {parseFloat(((agi * 0.3) / 100) * 100).toFixed(1)}%\r\n        </span>{' '}\r\n      </p>\r\n      <p>\r\n        Attack Speed:{' '}\r\n        <span className=\"status-info-value\">\r\n          {parseFloat(((agi * 0.7) / 100) * 100).toFixed(1)}%\r\n        </span>{' '}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusInfo;\r\n","import React, { Fragment } from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = props => {\r\n  const { level, onLevelUp, spCount, onReset } = props;\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"header-title\">Stat Calculator</h1>\r\n      <div className=\"header-content\">\r\n        <div className=\"header-controls\">\r\n          <p>\r\n            Level: <span>{level}</span>\r\n          </p>\r\n          <span>\r\n            <i onClick={onLevelUp} class=\"icon ion-ios-add-circle-outline\" />\r\n          </span>\r\n          <span>\r\n            <i onClick={onReset} class=\"icon ion-ios-refresh-circle\" />\r\n          </span>\r\n        </div>\r\n        <div className=\"header-sp\">\r\n          <p>\r\n            Available SP: <span>{spCount}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport Stats from './Stats/Stats';\nimport StatusInfo from './StatusInfo/StatusInfo';\nimport Header from './Header/Header';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      level: 1,\n      stats: {\n        str: 0,\n        int: 0,\n        agi: 0,\n        vit: 0\n      },\n      spCount: 0\n    };\n    this.handleIncrementStat = this.handleIncrementStat.bind(this);\n    this.handleDecrementStat = this.handleDecrementStat.bind(this);\n    this.handleLevelUp = this.handleLevelUp.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleLevelUp() {\n    this.setState(prevState => {\n      return {\n        level: prevState.level + 1,\n        spCount: prevState.spCount + 3\n      };\n    });\n  }\n\n  handleReset() {\n    this.setState(() => {\n      return {\n        level: 1,\n        stats: {\n          str: 0,\n          int: 0,\n          agi: 0,\n          vit: 0\n        },\n        spCount: 0\n      };\n    });\n  }\n\n  handleIncrementStat(stat) {\n    this.setState(prevState => {\n      const { stats, spCount } = prevState;\n      if (spCount < 1) {\n        return;\n      }\n\n      const statsCopy = Object.assign({}, stats);\n      statsCopy[stat] = statsCopy[stat] + 1;\n      return {\n        stats: statsCopy,\n        spCount: spCount - 1\n      };\n    });\n  }\n\n  handleDecrementStat(stat) {\n    this.setState(prevState => {\n      const { stats, spCount } = prevState;\n      const statsCopy = Object.assign({}, stats);\n      statsCopy[stat] = statsCopy[stat] - 1;\n      if (statsCopy[stat] < 0) {\n        return;\n      }\n      return {\n        stats: statsCopy,\n        spCount: spCount + 1\n      };\n    });\n  }\n\n  render() {\n    const { level, stats, spCount } = this.state;\n    return (\n      <div className=\"container\">\n        <Header\n          level={level}\n          spCount={spCount}\n          onLevelUp={this.handleLevelUp}\n          onReset={this.handleReset}\n        />\n        <div className=\"content\">\n          <Stats\n            stats={stats}\n            onIncrementStat={this.handleIncrementStat}\n            onDecrementStat={this.handleDecrementStat}\n          />\n          <StatusInfo stats={stats} />\n        </div>\n        <footer className=\"footer\">\n          <p>\n            Created by:{' '}\n            <a\n              href=\"https://twitter.com/rmasianjr\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Ricardo Masian Jr.\n            </a>\n          </p>\n          <p>\n            Link to{' '}\n            <a\n              href=\"https://github.com/rmasianjr/react-stat-calculator\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Repo\n            </a>\n          </p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}